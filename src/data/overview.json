{
  "breadcrumbs": [{ "label": "Overview" }],
  "version": "Version 1.0.1",
  "hero": {
    "title": "Spring Boot",
    "highlight": "CrudX Framework",
    "subtitle": "The ultimate boilerplate-free CRUD framework, engineered for speed and efficiency. CrudX supports MySQL, PostgreSQL, and MongoDB out of the box — enabling you to build production-ready REST APIs in minutes. It also lets you enable DTOs selectively for specific endpoints and provides real-time endpoint logging with detailed performance tracking — all with zero boilerplate and full developer control.",
    "buttons": {
      "getStarted": "Quick Setup",
      "viewOnGithub": "View on GitHub"
    }
  },
  "features": {
    "title": "Key Features",
    "items": [
      {
        "icon": "RocketLaunchIcon",
        "title": "Zero Boilerplate",
        "description": "Skip repetitive CRUD code — just define your entity and go."
      },
      {
        "icon": "CircleStackIcon",
        "title": "Multi-Database",
        "description": "Supports MySQL, PostgreSQL, and MongoDB out of the box."
      },
      {
        "icon": "ChartBarIcon",
        "title": "Performance Analytics",
        "description": "Real-time stats for response time, memory, and endpoints."
      },
      {
        "icon": "RectangleStackIcon",
        "title": "Batch Operations",
        "description": "Handle up to 100K records with smart bulk operations."
      },
      {
        "icon": "LockClosedIcon",
        "title": "Smart Constraints",
        "description": "Supports single or multi-field unique constraints."
      },
      {
        "icon": "ListBulletIcon",
        "title": "Auto-Pagination",
        "description": "Automatically paginates large datasets."
      },
      {
        "icon": "ArrowPathIcon",
        "title": "Lifecycle Hooks",
        "description": "Custom logic via beforeCreate, afterUpdate, etc."
      },
      {
        "icon": "CpuChipIcon",
        "title": "Memory Optimized",
        "description": "Chunk-based handling to avoid OutOfMemory errors."
      },
      {
        "icon": "ExclamationTriangleIcon",
        "title": "Exception Handling",
        "description": "Built-in error responses with clear messages."
      },
      {
        "icon": "BanknotesIcon",
        "title": "Immutable Fields",
        "description": "Protect fields from being updated post-creation."
      },
      {
        "icon": "GlobeAltIcon",
        "title": "RESTful APIs",
        "description": "11 pre-built endpoints following REST standards."
      },
      {
        "icon": "BookOpenIcon",
        "title": "Swagger UI",
        "description": "Instant API testing with built-in Swagger."
      },
      {
        "icon": "CodeBracketSquareIcon",
        "title": "DTO Mode",
        "description": "Enable DTOs for selected endpoints only."
      },
      {
        "icon": "ShieldCheckIcon",
        "title": "Endpoint Tracking",
        "description": "Auto-log requests, memory, and response time."
      }
    ]
  },

  "quickExample": {
    "title": "Quick Example",
    "intro": "Extend CrudXController - that's it! No additional code needed:",
    "codeSnippet": {
      "language": "java",
      "code": "import io.github.sachinnimbal.crudx.controller.CrudXController;\nimport org.springframework.web.bind.annotation.*;\n\n@RestController\n@RequestMapping(\"/api/employees\")\npublic class EmployeeController extends CrudXController<Employee, Long> {\n    // That's it! 11 REST endpoints are auto-generated:\n    // POST   /api/employees            - Create single\n    // POST   /api/employees/batch      - Create batch\n    // GET    /api/employees            - Get all\n    // GET    /api/employees/paged      - Get paginated\n    // GET    /api/employees/{id}       - Get by ID\n    // PATCH  /api/employees/{id}       - Partial update\n    // DELETE /api/employees/{id}       - Delete by ID\n    // DELETE /api/employees/batch      - Delete batch\n    // GET    /api/employees/count      - Count all\n    // GET    /api/employees/exists/{id} - Check existence\n    \n    // Add custom endpoints or lifecycle hooks here (optional)\n}"
    },
    "alert": {
      "variant": "success",
      "title": "You're All Set!",
      "text": "11 REST endpoints are auto-generated instantly. Start your application and test at http://localhost:8080/swagger-ui/index.html"
    }
  },
  "nextSteps": {
    "title": "Next Steps",
    "intro": "Ready to dive deeper? Here are some resources to explore:",
    "links": [
      {
        "path": "/quick-setup",
        "label": "Quick Setup",
        "desc": "Get started in under 5 minutes"
      },
      {
        "path": "/annotations",
        "label": "Core Annotations & DTOs",
        "desc": "Learn about @CrudX and constraint annotations"
      },
      {
        "path": "/base-entities",
        "label": "Base Entities",
        "desc": "Working with MySQL, PostgreSQL, and MongoDB"
      },
      {
        "path": "/rest-endpoints",
        "label": "REST Endpoints",
        "desc": "Explore 11 auto-generated endpoints"
      }
    ]
  },
  "pagination": {
    "next": { "title": "Quick Setup", "path": "/quick-setup" }
  },
  "toc": [
    { "id": "overview", "title": "Introduction", "level": 2 },
    { "id": "key-features", "title": "Key Features", "level": 2 },
    { "id": "quick-example", "title": "Quick Example", "level": 2 },
    { "id": "next-steps", "title": "Next Steps", "level": 2 }
  ]
}
